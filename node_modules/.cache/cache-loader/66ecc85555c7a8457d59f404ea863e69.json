{"remainingRequest":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/node_modules/babel-loader/lib/index.js!/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/src/components/comps/Filters.vue","dependencies":[{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/src/components/comps/Filters.vue","mtime":1523301617177},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/package.json","mtime":1522335527175},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Documents/Ativadores/ativador fetch carrosell - cópia 2/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport AutocompleteDropdown from '@/components/comps/AutocompleteDropdown'; //var especiesNames = window.dados1[0];\n\nimport * as conf from '@/main';\nvar postData = {}; // console.log(conf.list);\n\nexport default {\n  components: {\n    'autocomplete-dropdown': AutocompleteDropdown\n  },\n  methods: {\n    sayHi: function sayHi() {\n      readAllData('trees').then(function (data) {\n        // window.ltt= data;\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = data[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var dt = _step.value;\n            //postData.push( [dt.name_public, dt.cod_tree]);\n            postData[dt.name_public] = '' + dt.cod_tree + '';\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        ; //var spcicieImg = list.filter( spc => spc.cod_tree === obj.cod_tree)[0];\n        //console.log(ltt);\n\n        console.log(postData);\n        return postData;\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.sayHi(), console.log(postData);\n  },\n  data: function data() {\n    return {\n      selectedFruit: 'Apple',\n      fruitOptions: postData,\n      selectedDateRange: null\n    };\n  }\n};",{"version":3,"sources":["Filters.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,4EAEA,AACA;;;AACA,eAEA;;AACA;;6BAKA,AACA;AAHA;;4BAOA;kBACA;AAGA;AADA;;;;;;AAIA;AACA;0DAIA;AACA;;;;;;;;;;;;;;;;;AAEA;;AACA,oBACA;eACA;AAGA;AAGA,AACA;AA5BA;8BA6BA;SACA,qBAGA;AACA;wBACA;;qBAEA;oBACA;yBAEA,AACA;AALA;AAQA;AAlDA","file":"Filters.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"filters\">\n\n   \n\n    \n\n    <div class=\"filter\">\n      <label for=\"autocomplete-dropdown\">Autocomplete dropdown: </label>\n      <autocomplete-dropdown\n        id=\"autocomplete-dropdown\"\n        :options=\"fruitOptions\"\n        v-model=\"selectedFruit\"\n        placeholder=\"Enter\"\n      ></autocomplete-dropdown>\n    </div>\n\n   <div class=\"result\">\n      Selected: <strong>{{ selectedFruit}}</strong>\n    </div>\n\n  </div>\n</template>\n\n<script>\n\n\nimport AutocompleteDropdown from '@/components/comps/AutocompleteDropdown'\n\n//var especiesNames = window.dados1[0];\n    import * as conf from '@/main'\nvar postData ={};\n    \n   // console.log(conf.list);\nexport default {\n  components: {\n   \n    'autocomplete-dropdown': AutocompleteDropdown,\n \n  },\n     methods:{\n    sayHi: function () {\n      \n     \n          readAllData('trees')\n        .then(function(data) {\n       \n       // window.ltt= data;\n          for (var dt of data) {\n            \n           \n            //postData.push( [dt.name_public, dt.cod_tree]);\n            postData[dt.name_public] = '' + dt.cod_tree + '';\n            \n\n            \n          };\n            //var spcicieImg = list.filter( spc => spc.cod_tree === obj.cod_tree)[0];\n\n//console.log(ltt);\nconsole.log(postData);\n        return postData;\n        }) ;\n            \n   \n   },\n         \n         \n     },\n    mounted() {\n        this.sayHi(),\n            console.log(postData)\n            \n\n    },\n  data () {\n   return {\n      selectedFruit: 'Apple',\n      fruitOptions: postData,\n      selectedDateRange: null\n      \n    }\n  },\n\n\n}\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n.filters {\n  width: 800px;\n  margin: 0 auto;\n}\n\n.filter {\n  text-align: left;\n}\n\n.result {\n  margin: 30px 0;\n  text-align: left;\n}\n\nlabel {\n  display: block;\n}\n\n</style>\n"]}]}