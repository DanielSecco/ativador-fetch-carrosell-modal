{"remainingRequest":"/Users/anubz/Downloads/carrosell-master/node_modules/babel-loader/lib/index.js!/Users/anubz/Downloads/carrosell-master/node_modules/vue-loader/lib/selector.js?type=script&index=0!/Users/anubz/Downloads/carrosell-master/src/components/comps/Imgg.vue","dependencies":[{"path":"/Users/anubz/Downloads/carrosell-master/src/components/comps/Imgg.vue","mtime":1522249726745},{"path":"/Users/anubz/Downloads/carrosell-master/package.json","mtime":1522335527175},{"path":"/Users/anubz/Downloads/carrosell-master/node_modules/cache-loader/dist/cjs.js","mtime":0},{"path":"/Users/anubz/Downloads/carrosell-master/node_modules/babel-loader/lib/index.js","mtime":1519636541000},{"path":"/Users/anubz/Downloads/carrosell-master/node_modules/vue-loader/lib/selector.js","mtime":1520395331000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar firebase = require('firebase');\n\nvar $ = require('jquery');\n\nvar uploadTask;\nvar downloadURL;\n\nfunction ploc(ind, dataT, downloadURL) {\n  navigator.serviceWorker.ready.then(function (sw) {\n    var post = {\n      numeroTag: window.tagNum1,\n      image: downloadURL,\n      id: ind,\n      //lat: window.latData,\n      //long: window.longData,\n      data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n      hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n      user: \"img-vue\"\n    };\n    writeData('sync-posts', post).then(function () {\n      return sw.sync.register('sync-new-posts');\n    }).then(function () {\n      var data = {\n        message: 'Your Post was saved for syncing!'\n      };\n      console.log(data);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  });\n}\n\n;\nexport default {\n  name: 'imgg',\n  data: function data() {\n    return {\n      msg: 'Escolher Arquivo',\n      image: '',\n      imageB: '',\n      urr: ''\n    };\n  },\n  methods: {\n    onFileChange: function onFileChange(e) {\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.createImage(files[0]);\n      var file = e.target.files[0];\n      var storageRef = firebase.storage().ref(file.name);\n      var metadata = {\n        contentType: 'image/png'\n      }; // Upload file and metadata to the object 'images/mountains.jpg'\n\n      uploadTask = storageRef.put(file, metadata); // Listen for state changes, errors, and completion of the upload.\n\n      uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n      function (snapshot) {\n        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n        var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n        console.log('Upload is ' + progress + '% done');\n        var ind = new Date().toISOString(); //window.dados1.length;\n\n        var dataT = new Date();\n        downloadURL = uploadTask.snapshot.downloadURL;\n        event.preventDefault();\n        ploc(ind, dataT, downloadURL);\n\n        switch (snapshot.state) {\n          case firebase.storage.TaskState.PAUSED:\n            // or 'paused'\n            console.log('Upload is paused');\n            break;\n\n          case firebase.storage.TaskState.RUNNING:\n            // or 'running'\n            console.log('Upload is running');\n            break;\n        }\n\n        ;\n      }, function (error) {\n        ; // A full list of error codes is available at\n        // https://firebase.google.com/docs/storage/web/handle-errors\n\n        switch (error.code) {\n          case 'storage/unauthorized':\n            // User doesn't have permission to access the object\n            break;\n\n          case 'storage/canceled':\n            // User canceled the upload\n            break;\n\n          case 'storage/unknown':\n            // Unknown error occurred, inspect error.serverResponse\n            break;\n        }\n      }, function () {\n        // Upload completed successfully, now we can get the download URL\n        var ind = new Date().toISOString(); //window.dados1.length;\n\n        var dataT = new Date();\n        downloadURL = uploadTask.snapshot.downloadURL;\n        var post = {\n          numeroTag: window.tagNum1,\n          image: downloadURL,\n          id: ind,\n          //lat: window.latData,\n          //long: window.longData,\n          data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n          hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n          user: \"img-vue\"\n        };\n        fetch('http://192.168.0.8/lambanca', {\n          method: 'POST',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          mode: 'cors',\n          body: JSON.stringify(post)\n        }).then(function (response) {\n          console.log(' <> ', response);\n          return response.json();\n        }).then(function (data) {\n          console.log(' <> ', data);\n        }).catch(function (err) {\n          console.log(' <> ', err);\n        });\n        $(\"#imgf\").append('<img  src=\"' + downloadURL + '\" width=\"100px\" height=\"auto\"/>');\n        $(\"#lastIMG\").append('<img  src=\"' + downloadURL + '\" width=\"100px\" height=\"auto\"/>');\n        $(\"#imgLoad\").remove();\n      });\n    },\n    createImage: function createImage(file) {\n      var image = new Image();\n      var reader = new FileReader();\n      var vm = this;\n\n      reader.onload = function (e) {\n        vm.image = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n      /*\n        storageRef.put(reader).then(function(snapshot) {\n         \tconsole.log('Uploaded a blob or file!');\n         });\n         console.log(reader, vm.image);*/\n    },\n    removeImage: function removeImage(e) {\n      $(\"#lastIMG\").remove();\n    }\n  }\n};",{"version":3,"sources":["Imgg.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAgBA;;AACA;;AACA;AACA;;AAEA,uCACA;0BACA,yBACA;;wBAEA;aACA;UACA;AACA;AACA;mEACA;sEACA;YACA,AACA;AATA;4BAUA,uBAGA;8BACA;AACA,wBACA;;iBAEA,AACA;AAFA;kBAGA;AACA,4BACA;kBACA;AACA;AAGA;;;;AAGA;QAEA;wBACA;;WAEA;aACA;cACA;WACA,AACA;AALA;AAMA;;;mDAGA;iBACA,QACA;6BACA;gCACA;mDACA;;qBAEA,AACA;AAFA,QAPA,CAUA;;wCAGA,WACA;;8DACA;0BACA;AAGA;yEACA;8CAEA;4CACA;;wBACA;0CACA;cACA;yBACA;;yBACA;;AACA;wBACA;AACA;;0CAEA;AACA;wBACA;AACA;;;AAEA;AACA;SAGA,CACA;AACA;;sBACA;eACA;AACA;AACA;;eACA;AACA;AACA;;eACA;AACA;AACA,AAIA;;AAEA,qBACA;AACA;4CACA;;wBACA;0CACA;;4BAEA;iBACA;cACA;AACA;AACA;uEACA;0EACA;gBACA,AACA;AATA;;kBAWA;;2CAEA;4BACA;sBACA,AACA;AAJA;gBAKA;+BACA,AACA;AATA,oCAUA;8BACA;0BACA;AACA,gCACA;8BACA;AACA,gCACA;8BACA;AAIA;wDACA;2DACA;sBACA;AACA;AACA;4CACA;sBACA;uBACA;eACA;;mCACA;4BACA;AACA;;2BAEA;AACA,AACA,AACA,AACA,AACA;;;;;AACA;yCACA;oBACA;AACA,AACA;AA3HA;AAVA","file":"Imgg.vue","sourceRoot":"src/components/comps","sourcesContent":["<template>\n  <div class=\"imgg\">\n    <h1>{{ msg }}</h1>\n      <div v-if=\"!image\">\n    <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n  </div>\n  <div v-else>\n    <img id=\"imgLoad\" :src=\"image\" width=\"50px\" height=\"50px\"/>\n      <input id=\"inputF\" type=\"file\" accept=\"video/*;capture=camcorder\" @change=\"onFileChange\">\n   <button @click=\"removeImage\">Remove image</button>\n      <div id=\"lastIMG\"> \n    </div>\n  </div>\n  </div>\n</template>\n<script>\n    var firebase = require('firebase');\n    var $ = require('jquery')\n    var uploadTask;\n    var downloadURL;\n\n    function ploc(ind, dataT, downloadURL) {\n        navigator.serviceWorker.ready\n            .then(function(sw) {\n                var post = {\n                    numeroTag: window.tagNum1,\n                    image: downloadURL,\n                    id: ind,\n                    //lat: window.latData,\n                    //long: window.longData,\n                    data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n                    hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n                    user: \"img-vue\"\n                };\n                writeData('sync-posts', post)\n                    .then(function() {\n\n\n                        return sw.sync.register('sync-new-posts');\n                    })\n                    .then(function() {\n                        var data = {\n                            message: 'Your Post was saved for syncing!'\n                        };\n                        console.log(data);\n                    })\n                    .catch(function(err) {\n                        console.log(err);\n                    });\n            });\n\n\n    };\n\n\n    export default {\n        name: 'imgg',\n        data() {\n            return {\n                msg: 'Escolher Arquivo',\n                image: '',\n                imageB: '',\n                urr: ''\n            }\n        },\n        methods: {\n            onFileChange(e) {\n                var files = e.target.files || e.dataTransfer.files;\n                if (!files.length)\n                    return;\n                this.createImage(files[0]);\n                var file = e.target.files[0];\n                var storageRef = firebase.storage().ref(file.name);\n                var metadata = {\n                    contentType: 'image/png'\n                };\n                // Upload file and metadata to the object 'images/mountains.jpg'\n                uploadTask = storageRef.put(file, metadata);\n\n\n                // Listen for state changes, errors, and completion of the upload.\n                uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, // or 'state_changed'\n                    function(snapshot) {\n                        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n\n\n                        var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        console.log('Upload is ' + progress + '% done');\n\n                        var ind = new Date().toISOString(); //window.dados1.length;\n                        var dataT = new Date();\n                        downloadURL = uploadTask.snapshot.downloadURL;\n                        event.preventDefault();\n                        ploc(ind, dataT, downloadURL);\n                        switch (snapshot.state) {\n                            case firebase.storage.TaskState.PAUSED: // or 'paused'\n                                console.log('Upload is paused');\n                                break;\n                            case firebase.storage.TaskState.RUNNING:\n\n                                // or 'running'\n                                console.log('Upload is running');\n                                break;\n                        };\n\n                    },\n                    function(error) {\n\n\n                        ; // A full list of error codes is available at\n                        // https://firebase.google.com/docs/storage/web/handle-errors\n                        switch (error.code) {\n                            case 'storage/unauthorized':\n                                // User doesn't have permission to access the object\n                                break;\n                            case 'storage/canceled':\n                                // User canceled the upload\n                                break;\n                            case 'storage/unknown':\n                                // Unknown error occurred, inspect error.serverResponse\n                                break;\n                        }\n\n\n\n                    },\n\n                    function() {\n                        // Upload completed successfully, now we can get the download URL\n                    var ind = new Date().toISOString(); //window.dados1.length;\n                        var dataT = new Date();\n                        downloadURL = uploadTask.snapshot.downloadURL; \n                     var post = {\n                    numeroTag: window.tagNum1,\n                    image: downloadURL,\n                    id: ind,\n                    //lat: window.latData,\n                    //long: window.longData,\n                    data: dataT.getDate() + '/' + dataT.getMonth() + '/' + dataT.getFullYear(),\n                    hora: dataT.getHours() + ':' + dataT.getMinutes() + ':' + dataT.getSeconds(),\n                    user: \"img-vue\"\n                }\n                        fetch('http://192.168.0.8/lambanca', {\n                                method: 'POST',\n                                headers: {\n                                    'Access-Control-Allow-Origin': '*',\n                                    'Content-Type': 'application/json',\n                                    'Accept': 'application/json'\n                                },\n                                mode: 'cors',\n                                body: JSON.stringify(post)\n                            })\n                            .then(function(response) {\n                                console.log(' <> ', response);\n                                return response.json();\n                            })\n                            .then(function(data) {\n                                console.log(' <> ', data);\n                            })\n                            .catch(function(err) {\n                                console.log(' <> ', err);\n                            });\n\n\n\n                        $(\"#imgf\").append('<img  src=\"' + downloadURL + '\" width=\"100px\" height=\"auto\"/>');\n                        $(\"#lastIMG\").append('<img  src=\"' + downloadURL + '\" width=\"100px\" height=\"auto\"/>');\n                        $(\"#imgLoad\").remove();\n                    });\n            },\n            createImage(file) {\n                var image = new Image();\n                var reader = new FileReader();\n                var vm = this;\n                reader.onload = (e) => {\n                    vm.image = e.target.result;\n                };\n                reader.readAsDataURL(file);\n\n                /*\n                  storageRef.put(reader).then(function(snapshot) {\n                   \tconsole.log('Uploaded a blob or file!');\n                   });\n                   console.log(reader, vm.image);*/\n            },\n            removeImage: function(e) {\n                $(\"#lastIMG\").remove();\n            }\n        }\n    }\n\n</script>\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n    h1,\n    h2,\n    p {\n        font-weight: normal;\n        color: beige;\n    }\n\n</style>\n"]}]}